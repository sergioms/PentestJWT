import base64


def is_dict(text):
    if isinstance(text, dict):
        return True
    else:
        return False


def base64url_encode(input_bytes: bytes):
    return base64.urlsafe_b64encode(input_bytes).replace(b'=', b'')


def base64url_decode(input_str):
    if isinstance(input_str, str):
        input_str = input_str.encode('utf-8')

    # removes the base64 padding (=)
    padding = len(input_str) % 4
    if padding > 0:
        input_str += b'=' * (4 - padding)

    return base64.urlsafe_b64decode(input_str)


def force_unicode(value):
    if isinstance(value, bytes):
        return value.decode('utf-8')
    elif isinstance(value, str):
        return value.encode('utf-8')
    else:
        raise TypeError('Unexpected type {}'.format(type(value)))


def force_bytes(value):
    if isinstance(value, str):
        return value.encode('utf-8')
    elif isinstance(value, bytes):
        return value
    else:
        raise TypeError('Unexpected type {}'.format(type(value)))
